IDK (Paul Serbanescu, May Qiu, Jeffery Tang)
APCS
HW71 -- Mysterious Method
2022-03-07
time spent: .5 hrs
DISCO
* We first thought the values to the left of the "wall" would be sorted ascendingly and
those to the right would be sorted descendingly but they were just coincidences from the
first trace.
QCC
* Is there a way to code this more efficently (i.e. not using ArrayList)?
* Is there a way to sort the left and right sides ascendingly and descendingly, respectively?
q0: The third integer input is the "wall" and the values to its left are less than it and the
values to its right are greater than it.
q1: O(n)

Starting array: [9, 3, 8, 1, 12, 4]
s = 1, i = 1, current array: [3, 9, 4, 1, 12, 8]
s = 2, i = 2, current array: [3, 4, 9, 1, 12, 8]
s = 3, i = 3, current array: [3, 4, 1, 9, 12, 8]
[3, 4, 1, 8, 12, 9]
Starting array: [9, 3, 8, 1, 12, 4, 23]
[1, 3, 8, 23, 12, 4, 9]
Starting array: [3, 4, 1, 8, 12, 9]
s = 1, i = 0, current array: [3, 8, 1, 4, 12, 9]
[3, 3, 8, 1]
Starting array: [9, -3, 8, 1, 12, 4]
s = 1, i = 1, current array: [-3, 9, 4, 1, 12, 8]
s = 2, i = 2, current array: [-3, 4, 9, 1, 12, 8]
s = 3, i = 3, current array: [-3, 4, 1, 9, 12, 8]
[-3, 4, 1, 8, 12, 9]
Starting array: [9, 3, 8, 1, 12, 4, 13, 16, 6]
s = 1, i = 0, current array: [6, 3, 8, 1, 12, 4, 13, 16, 9]
s = 2, i = 1, current array: [6, 3, 8, 1, 12, 4, 13, 16, 9]
s = 3, i = 2, current array: [6, 3, 8, 1, 12, 4, 13, 16, 9]
s = 4, i = 3, current array: [6, 3, 8, 1, 12, 4, 13, 16, 9]
s = 5, i = 5, current array: [6, 3, 8, 1, 4, 12, 13, 16, 9]
[6, 3, 8, 1, 4, 9, 13, 16, 12]
